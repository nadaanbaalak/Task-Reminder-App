{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","components/auth/Register.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/DashboardEdit.js","components/dashboard/Dashboard.js","components/layout/Alert.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile/ProfileItem.js","components/profile/profiles.js","components/profiles/ProfileTop.js","components/profiles/profileAbout.js","components/profiles/profile.js","actions/task.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/Tasks/TaskUpdateForm.js","components/Tasks/TaskForm.js","components/layout/notFound.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/task.js","reducers/index.js","store.js","App.js","index.js","components/layout/spinner.gif"],"names":["setAlert","msg","alertType","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","isAuthenticated","auth","loading","logout","authLinks","to","onClick","guestLinks","className","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","register","password2","getCurrentProfile","statusText","status","createProfile","history","edit","push","Spinner","src","spinner","style","width","margin","display","alt","DashboardEdit","profile","deleteAccountAndProfile","window","confirm","delete","user","useEffect","alerts","alert","length","map","key","Component","component","rest","render","props","withRouter","location","age","bio","twitter","facebook","instagram","displaySocialInputs","toggleSocialInputs","href","ProfileItem","_id","avatar","getProfiles","profiles","ProfileTop","social","rel","ProfileAbout","getProfileById","userId","match","params","getTaskById","taskId","deleteTask","console","log","task","due_at","date","description","completed","format","getTasks","tasks","Task","updateTask","patch","toBeReminded","htmlFor","minDate","addDays","Date","moment","onChangeDate","addTask","NotFound","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","Tasks","EditTask","TaskForm","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b23a2564.chunk.js","sourcesContent":["import uuid from 'uuid';\nimport { SET_ALERT,REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg,alertType) => dispatch =>{\n    const id = uuid.v4();\n    dispatch({\n        type:SET_ALERT,\n        payload:{msg,alertType,id}\n    });\n    setTimeout(()=> dispatch ({type: REMOVE_ALERT,payload: id}), 2000);\n};","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\nexport const GET_TASK = 'GET_TASK';\nexport const GET_TASKS = 'GET_TASKS';\nexport const TASK_ERROR = 'TASK_ERROR';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const ADD_TASK='ADD_TASK';\n","import axios from 'axios'; //not for making request here but for setting header\n\nconst setAuthToken = token =>{\n    if(token)\n    {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    }\n    else{\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport {setAlert} from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAILURE,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAILURE,\n    LOGOUT, \n    CLEAR_PROFILE} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//Load User\nexport const loadUser = ()=> async dispatch =>{\n    if(localStorage.token)\n    {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('api/auth');\n        dispatch({\n            type:USER_LOADED,\n            payload:res.data\n        })  \n    } catch (error) {\n        dispatch({\n            type:AUTH_ERROR\n        })\n    }\n}\n\n//Register User\n\nexport const register = ({name,email,password}) => async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name,email,password});\n\n    try{\n        const res = await axios.post('/api/users',body,config);\n        dispatch({\n            type:REGISTER_SUCCESS,\n            payload:res.data\n        })\n        dispatch(loadUser());\n    } catch (error){\n        const errors = error.response.data.errors;\n        if(errors){\n            errors.forEach((error)=>dispatch(setAlert(error.msg,'danger')));\n        }\n        dispatch({\n            type:REGISTER_FAILURE\n        });\n    }\n\n}\n\n\n//Login user\nexport const login = (email,password) => async dispatch =>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n\n    const body = JSON.stringify({email,password});\n\n    try{\n        const res = await axios.post('/api/auth',body,config);\n        dispatch({\n            type:LOGIN_SUCCESS,\n            payload:res.data\n        })\n        dispatch(loadUser()); \n    } catch (error){\n        const errors = error.response.data.errors;\n        if(errors){\n            errors.forEach((error)=>dispatch(setAlert(error.msg,'danger')));\n        }\n        dispatch({\n            type:LOGIN_FAILURE\n        });\n    }\n\n}\n\n//Logout user\nexport const logout = ()=>dispatch =>{\n    dispatch({\n        type:CLEAR_PROFILE\n    })\n    dispatch({\n        type:LOGOUT\n    })\n}","import React,{Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {logout} from '../../actions/auth';\n\nconst Navbar = ({isAuthenticated,loading,logout})=>{\n    const authLinks = (\n        <ul>\n            <li>\n                <Link to='/profiles'>\n                Users</Link>  \n            </li>\n            <li>\n                <Link to='/tasks'>\n                Tasks</Link>  \n            </li>\n            <li>\n                <Link to='/dashboard'>\n                Dashboard</Link>\n            </li>\n            <li>\n                <Link onClick={logout} to=\"/\">\n                Logout</Link>\n            </li>\n        </ul>\n    );\n    const guestLinks = ( \n        <ul>\n            <li><Link to=\"/profiles\">Users</Link></li>\n            <li><Link to=\"/register\">Register</Link></li>\n            <li><Link to=\"/login\">Login</Link></li>\n        </ul>\n    );\n      \n    return (\n            <nav className=\"navbar bg-dark\">\n                <h1>\n                    <Link to=\"/\"><i className=\"fas fa-sticky-note\"></i> TaskReminder</Link>\n                </h1>\n                <Fragment>{(!loading && isAuthenticated)?authLinks:guestLinks}</Fragment>\n            </nav>\n    )\n}\n\n\nNavbar.propTypes = {\n    logout:PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n    loaded: PropTypes.bool\n}\n\n\nconst mapStateToProps = state =>({\n    isAuthenticated:state.auth.isAuthenticated,\n    loading:state.auth.loading\n});\n\n\nexport default connect(mapStateToProps,{logout})(Navbar); ","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {Redirect} from 'react-router-dom';\n\nconst Landing = ({isAuthenticated})=>{\n    if(isAuthenticated)\n    {\n        return <Redirect to=\"/dashboard\" />\n    }\n    return (\n            <section className=\"landing\">\n                <div className=\"dark-overlay\">\n                    <div className=\"landing-inner\">\n                    <h1 className=\"x-large\">Task Reminder</h1>\n                    <p className=\"lead\">\n                        Create a Task and set reminder, Now never miss anything!!\n                    </p>\n                    <div className=\"buttons\">\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\n                    </div>\n                    </div>\n                </div>\n            </section>\n    );\n};\n\nLanding.propTypes = {\n    isAuthenticated:PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated:state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Landing);","import React,{Fragment,useState} from 'react';\nimport { Link, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../actions/auth'; \n\nconst Login = ({login,isAuthenticated})=>{\n    const [formData, setFormData] = useState({\n        email:'',\n        password:''\n    });\n    const {email,password} = formData;\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\n    const onSubmit = e=>{\n        e.preventDefault();\n        login(email,password);\n    }\n\n\n    //Redirect if authenticated\n    if(isAuthenticated)\n    {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e=> onChange(e)} required/>\n                </div>\n                <div className=\"form-group\">\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" minLength=\"6\" value={password} onChange={e=> onChange(e)} required/>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n    );\n};\n\n\nLogin.propTypes = {\n    login:PropTypes.func.isRequired,\n    isAuthenticated:PropTypes.bool\n}\n\nconst mapStateToProps = (state)=>({\n    isAuthenticated:state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps,{login})(Login);","import React, {Fragment,useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport {setAlert} from '../../actions/alert';\nimport {register} from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n\nconst Register = ({setAlert,register,isAuthenticated})=>{\n    const [formData, setFormData] = useState({\n        name:'',\n        email:'',\n        password:'',\n        password2:''\n    });\n    const {name,email,password,password2} = formData;\n    const onChange = e => setFormData({...formData,[e.target.name]:e.target.value})\n    const onSubmit = e=>{\n        e.preventDefault();\n        if(password!==password2)\n        {\n            setAlert('Password do not match','danger');\n        } else {\n            register({name,email,password});\n        }\n    };\n\n    //Redirect if authenticated\n    if(isAuthenticated)\n    {\n        return <Redirect to=\"/dashboard\" />;\n    }\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e=> onChange(e)}  />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e=> onChange(e)} />\n                <small className=\"form-text\">This site uses Gravatar so if you want a profile image, use a Gravatar email</small>\n                </div>\n                <div className=\"form-group\">\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" minLength=\"6\" value={password} onChange={e=> onChange(e)} />\n                </div>\n                <div className=\"form-group\">\n                <input type=\"password\" placeholder=\"Confirm Password\" name=\"password2\" minLength=\"6\" value={password2} onChange={e=> onChange(e)}/ >\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n            </form>\n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    );\n};\n\nRegister.propTypes = {\n    setAlert:PropTypes.func.isRequired,\n    register:PropTypes.func.isRequired,\n    isAuthenticated:PropTypes.bool\n}\n\nconst mapStateToProps = (state)=>({\n    isAuthenticated:state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps,{setAlert,register})(Register);","import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_PROFILE,\n    GET_PROFILES,\n    PROFILE_ERROR,\n    DELETE_ACCOUNT,\n    CLEAR_PROFILE\n} from './types';\n\n//Get current user's Profile\nexport const getCurrentProfile = ()=> async dispatch=>{\n    try{\n        const res = await axios.get('/api/profile/me');\n        dispatch({\n            type:GET_PROFILE,\n            payload: res.data\n        });\n    } catch(error) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n};\n\n\n//Get all Profiles\nexport const getProfiles = ()=> async dispatch=>{\n    dispatch({type:CLEAR_PROFILE});\n    try{\n        const res = await axios.get('/api/profile');\n        dispatch({\n            type:GET_PROFILES,\n            payload: res.data\n        });\n    } catch(error) {\n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n};\n\n\n//Get Profile by id\nexport const getProfileById = userId => async dispatch=>{\n    try{\n        const res = await axios.get(`/api/profile/user/${userId}`);\n        dispatch({\n            type:GET_PROFILE,\n            payload:res.data\n        });\n    } catch(error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n};\n\n\n\n//create or update Profile\nexport const createProfile = (formData,history,edit=false) =>async dispatch=>{\n    try {\n        const config = {\n            headers:{\n                'Content-type':'application/json'\n            }\n        }\n        const res = await axios.post('/api/profile', formData,config);\n        dispatch({\n            type:GET_PROFILE,\n            payload: res.data\n        });\n        dispatch(setAlert(edit?'Profile Updated':'Profile created','success'));\n        if(!edit){\n            history.push(\"/dashboard\"); //can't use redirrect in an action\n        }\n    } catch (error) {\n        const errors = error.response.data.errors;\n        if(errors){\n            errors.forEach((error)=>dispatch(setAlert(error.msg,'danger')));\n        } \n        dispatch({\n            type:PROFILE_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        })\n    }\n}\n\n//Delete profile and account\nexport const deleteAccountAndProfile = () => async dispatch =>{\n    if(window.confirm(`Are you sure? This can't be undone!`))\n    {\n        try{\n            await axios.delete('/api/profile');\n            dispatch({\n                type:CLEAR_PROFILE\n            })\n            dispatch({\n                type:DELETE_ACCOUNT\n            })\n            dispatch(setAlert('Your account is deleted'))\n        } catch(error){\n            dispatch({\n                type:PROFILE_ERROR,\n                payload:{msg: error.response.statusText, status: error.response.status }\n            })\n        }\n    }\n    \n}","import React, {Fragment} from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = ()=>(\n    <Fragment>\n        <img src={spinner} style={{ width:'200px', margin:'auto', display:'block'}} alt='loading'/>\n    </Fragment>\n);\n\nexport default Spinner;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst DashboardEdit = () =>{\n    return (\n        <div className=\"dash-buttons\">\n            <Link to=\"/edit-profile\" className=\"btn btn-light\">Edit Profile</Link>\n        </div>\n    )\n}\n\nexport default DashboardEdit; ","import React, {useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from  'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getCurrentProfile,deleteAccountAndProfile} from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport DashboardEdit from './DashboardEdit';\n\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading},deleteAccountAndProfile})=>{\n    useEffect(()=>{\n        getCurrentProfile();\n    },[getCurrentProfile]);\n    return loading &&profile===null?(<Spinner/>):(<Fragment>\n        <h1 className=\"large text-primary\">Dashboard</h1>\n        <p className=\"lead\">\n            Welcome {user && user.name}\n        </p>\n        {profile !==null ? (\n        <Fragment>\n            <DashboardEdit />\n            <div className=\"my-2\">\n                <button className=\"btn btn-danger\" onClick={()=>deleteAccountAndProfile()}>\n                    Delete My Account\n                </button>\n            </div>\n        </Fragment>):(\n        <Fragment>    \n            <p>Please tell us more about yourself</p>\n            <Link to=\"/create-profile\" className=\"btn btn-primary my-1\"> Create Profile</Link>\n        </Fragment>)}\n    </Fragment>)\n};\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccountAndProfile:PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state =>({\n    auth:state.auth,\n    profile:state.profile\n})\n\n\nexport default connect(mapStateToProps,{getCurrentProfile,deleteAccountAndProfile})(Dashboard);\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nconst Alert = ({alerts}) => alerts!==null && alerts.length > 0 && alerts.map(alert=>(\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\n\nAlert.propTypes = {\n    alerts:PropTypes.array.isRequired\n}\n\nconst mapStateToProp = state =>({\n    alerts:state.alert\n});\n\nexport default connect(mapStateToProp)(Alert);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Route,Redirect} from 'react-router-dom'\n\n \n\nconst PrivateRoute = ({component:Component, auth:{isAuthenticated,loading}, ...rest})=>(\n    <Route {...rest} render={props => !isAuthenticated && !loading?(<Redirect to=\"/login\"></Redirect>):(<Component {...props}/>)} />\n);\n\nPrivateRoute.propTypes = {\n    auth:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    auth:state.auth\n})\n\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, {useState,Fragment} from 'react';\nimport {Link,withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createProfile} from '../../actions/profile';\n\nconst CreateProfile = ({createProfile,history}) =>{\n    const [formData,setFormData] = useState({\n        location:'',  \n        age:'',\n        bio:'',\n        twitter:'',\n        facebook:'',\n        instagram:''\n    });\n\n    const onSubmit = e=>{\n        e.preventDefault();\n        createProfile(formData,history);\n    }\n\n    const onChange = e=>setFormData({...formData, [e.target.name]:e.target.value})\n\n    const [displaySocialInputs,toggleSocialInputs] = useState(false);\n\n    const {location,age,bio,twitter,facebook,instagram} = formData;\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Tell us more about yourself\n            </h1>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                \n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Age\" name=\"age\" value={age} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\">Age</small>\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\">City & state suggested (eg. Ghaziabad, U.P)</small>\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e=> onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button onClick={()=>toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=> onChange(e)}/>\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=> onChange(e)}/>\n                        </div>\n                        <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e=> onChange(e)}/>\n                        </div>\n                    </Fragment>}\n                \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" href=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nCreateProfile.propTypes = {\n    createProfile:PropTypes.func.isRequired\n}\n\n\nexport default connect(null,{createProfile})(withRouter(CreateProfile));\n\n\n/*\n<div class=\"form-group\">\n<h4>Due Date</h4>\n<input type=\"date\" name=\"due_date\" value={due_at} onChange={e=>onChange(e)}/>\n</div>\n\n<div class=\"form-group\">\n<h4>Reminder at</h4>\n<input type=\"time\" name=\"due_time\" value={reminder_at} onChange={e=>onChange(e)}/>\n</div>\n*/","import React, {useState,Fragment,useEffect} from 'react';\nimport {Link,withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createProfile,getCurrentProfile} from '../../actions/profile';\n\n\nconst EditProfile = ({createProfile,getCurrentProfile,profile:{profile,loading},history}) =>{\n    const [formData,setFormData] = useState({\n        location:'',  \n        age:'',\n        bio:'',\n        twitter:'',\n        facebook:'',\n        instagram:''\n    });\n\n    const onSubmit = e=>{\n        e.preventDefault();\n        createProfile(formData,history,true);\n    }\n\n    const onChange = e=>setFormData({...formData, [e.target.name]:e.target.value})\n\n    const [displaySocialInputs,toggleSocialInputs] = useState(false);\n\n    useEffect(()=>{\n        getCurrentProfile(); \n\n        setFormData({\n            location: loading || !profile.location?'':profile.location,\n            age: loading || !profile.age?'':profile.age,\n            bio: loading || !profile.bio?'':profile.bio,\n            twitter: loading || !profile.twitter?'':profile.twitter,\n            facebook: loading || !profile.facebook?'':profile.facebook,\n            instagram: loading || !profile.instagram?'':profile.instagram\n        })\n    },[loading,getCurrentProfile,profile.location,profile.age,profile.bio,profile.twitter,profile.facebook,profile.instagram]);\n\n\n    const {location,age,bio,twitter,facebook,instagram} = formData;\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Tell us more about yourself\n            </h1>\n            <small>* = required field</small>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                \n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Age\" name=\"age\" value={age} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\">Age</small>\n                </div>\n                <div className=\"form-group\">\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\">City & state suggested (eg. Ghaziabad, U.P)</small>\n                </div>\n                <div className=\"form-group\">\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e=> onChange(e)}></textarea>\n                <small className=\"form-text\">Tell us a little about yourself</small>\n                </div>\n\n                <div className=\"my-2\">\n                <button onClick={()=>toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\n                    Add Social Network Links\n                </button>\n                <span>Optional</span>\n                </div>\n                {displaySocialInputs && <Fragment>\n                    <div className=\"form-group social-input\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e=> onChange(e)}/>\n                        </div>\n\n                        <div className=\"form-group social-input\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e=> onChange(e)}/>\n                        </div>\n                        <div className=\"form-group social-input\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                        <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e=> onChange(e)}/>\n                        </div>\n                    </Fragment>}\n                \n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nEditProfile.propTypes = {\n    createProfile:PropTypes.func.isRequired,\n    getCurrentProfile:PropTypes.func.isRequired,\n    profile:PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = (state) => ({\n    profile:state.profile\n});\n\n\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile));","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nconst ProfileItem = ({profile:{\n    user:{_id,name,avatar},\n    location\n}})=>{\n    return <div className=\"profile bg-light\">\n        <div>\n            <h2>{name}</h2>\n            <p className=\"my-1\"> {location&&<span>{location}</span>}</p>\n            <Link to={`/profile/${_id}`} className='btn btn-primary'>View User Profile</Link>\n        </div>\n    </div>\n}\n\n\nexport default ProfileItem;","import React,{Fragment,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport {getProfiles} from '../../actions/profile';\n\n\nconst Profiles = ({getProfiles,profile:{profiles,loading}}) =>{\n    useEffect(()=>{\n        getProfiles();\n    },[getProfiles])\n    return <Fragment>\n        {loading?<Spinner/>:<Fragment>\n            <h1 className=\"large text-primary\">Users</h1>\n            <div className=\"profiles\">\n                {profiles.length > 0?(\n                    profiles.map(profile=>(\n                        <ProfileItem key={profile._id} profile={profile}/>\n                    ))\n                ): <h4>No User Profiles found..</h4>}\n            </div>\n\n        </Fragment>}\n    </Fragment>;\n};\n\nProfiles.propTypes = {\n    getProfiles:PropTypes.func.isRequired,\n    profile:PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state =>({\n    profile:state.profile\n})\n\nexport default connect(mapStateToProps,{getProfiles})(Profiles);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({profile:{\n    age,\n    location,\n    bio,\n    social,\n    user:{\n        name,\n        avatar\n    }\n}})=>{\n    return (\n        <div className=\"profile-top bg-primary p-2\">\n            <img className=\"round-img my-1\" src={avatar} alt=\"\"/>\n            <h1 className=\"large\">{name}</h1>\n            <p>{location && <span>{location}</span>}</p>\n            <div className=\"icons my-1\">\n                {\n                    social && social.twitter && (\n                    <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-twitter fa-2x\"></i>\n                    </a>)\n                }\n                {\n                    social && social.facebook && (\n                    <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-facebook fa-2x\"></i>\n                    </a>)\n                }\n                {\n                    social && social.instagram && (\n                    <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <i className=\"fab fa-instagram fa-2x\"></i>\n                    </a>)\n                }\n                \n            </div>\n        </div>\n    )\n\n}\n\n\nProfileTop.propTypes = {\n    profile:PropTypes.object.isRequired\n}\n\nexport default ProfileTop;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n    profile:{\n        bio,\n        user:{\n            name\n        }\n    }\n})=>{\n    return (\n        <div className=\"profile-about bg-light p-2\">\n            {bio && (\n                <Fragment>\n                    <h2 className=\"text-primary\">{name}'s Bio</h2>\n                    <p>\n                        {bio}\n                    </p>\n                </Fragment>\n            )}\n        </div>\n    )\n}\n\nProfileAbout.propTypes = {\n    profile:PropTypes.object.isRequired\n}\n\nexport default ProfileAbout;","import React,{Fragment,useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './profileAbout';\n\nimport {getProfileById} from '../../actions/profile';\n\nconst Profile = ({\n    getProfileById,\n    profile:{profile,loading},\n    auth,\n    match\n}) =>{\n    useEffect(()=>{\n        getProfileById(match.params.id);\n    },[getProfileById,match.params.id])\n    return (\n        <Fragment>\n            {profile===null || loading? (<Spinner/>):(\n                <Fragment>\n                    <Link to=\"/profiles\" className=\"btn btn-light\">Back to Profiles</Link>\n                    {auth.isAuthenticated && auth.loading === false && auth.user._id===profile.user._id && <Link to=\"/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>}\n                    <div className=\"profile-grid my-1\">\n                        <ProfileTop profile={profile}/>\n                        <ProfileAbout profile={profile}/>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nProfile.propTypes = {\n    getProfileById:PropTypes.func.isRequired,\n    profile:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    profile:state.profile,\n    auth:state.auth\n});\n\nexport default connect(mapStateToProps,{getProfileById})(Profile)","import axios from 'axios';\nimport {setAlert} from './alert';\n\nimport {\n    GET_TASK,\n    GET_TASKS,\n    TASK_ERROR,\n    UPDATE_TASK,\n    DELETE_TASK,\n    ADD_TASK\n} from './types';\n\n//get a single task by id\nexport const getTaskById = (taskId) =>async dispatch =>{\n    try {\n        const res = await axios.get(`/api/tasks/${taskId}`);\n        dispatch({\n            type:GET_TASK,\n            payload:res.data\n        })\n    } catch (error) {\n        dispatch({\n            type:TASK_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n//Get Tasks\nexport const getTasks = () => async dispatch =>{\n    try {\n        const res = await axios.get('/api/tasks')\n        dispatch({\n            type:GET_TASKS,\n            payload:res.data\n        })\n    } catch (error) {\n        dispatch({\n            type:TASK_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n\n//Update Task\nexport const updateTask = (taskId,formData) => async dispatch =>{\n    try {\n        const res = await axios.patch(`/api/tasks/${taskId}`,formData)\n        dispatch({\n            type:UPDATE_TASK,\n            payload:res.data\n        })\n        dispatch(setAlert('Task Updated','success'));\n        //history.push(\"/tasks\"); //can't use redirect in an action\n    } catch (error) {\n        dispatch({\n            type:TASK_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n\n//Delete Task\nexport const deleteTask = taskId => async dispatch=>{\n    try {\n        console.log('1');\n        await axios.delete(`/api/tasks/${taskId}`);\n        console.log('2');\n        dispatch({\n            type:DELETE_TASK,\n            payload:taskId\n        });\n        dispatch(setAlert('Task Removed','success'));\n    } catch (error) {\n        console.log('Inside catch')\n        dispatch({\n            type:TASK_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n    }\n}\n\n\n//Add a task\n\nexport const addTask = (formData) => async dispatch=>{\n    const config = {\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }\n    try {   \n        console.log(1)\n        const res = await axios.post(`/api/tasks/`,formData,config);\n        console.log(2)\n        dispatch({\n            type:ADD_TASK,\n            payload:res.data\n        });\n        console.log(3)\n        dispatch(setAlert('Task Added','success'));\n       // history.push(\"/tasks\")\n    } catch (error) {\n        //console.log('Inside catch')\n        dispatch({\n            type:TASK_ERROR,\n            payload:{msg: error.response.statusText, status: error.response.status }\n        });\n        dispatch(setAlert('Operation Failed','danger'));\n    }\n}\n","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\nimport {deleteTask,getTaskById} from '../../actions/task';\n\n\nconst TaskItem = ({auth,deleteTask,getTaskById,task:{_id,due_at,date,description,completed}}) => {\n    return (\n        <div className=\"task\">\n                <p className=\"my-1\">\n                    {description}\n                </p>\n                <p className=\"task-date\">\n                    Created on <Moment format='DD/MM/YYYY'>{date}</Moment>\n                </p>\n                <p ><b>Due by :</b> <Moment format='DD/MM/YYYY'>{due_at}</Moment></p>\n                <p><b>Status :</b>{completed===true?'Completed':'Pending'}</p>\n                <div>\n                    {completed===false?(<Link to={`/edit-task/${_id}`} className=\"btn btn-primary\">Update</Link>):<Fragment/>}                \n                    <button onClick={e=>deleteTask(_id)} type=\"button\" className=\"btn btn-danger\">\n                        Delete\n                    </button>\n                </div>\n                \n      </div>\n    ) \n}\n\nTaskItem.propTypes = { \n    task:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n    deleteTask: PropTypes.func.isRequired,\n    getTaskById:PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state =>({\n    auth:state.auth  \n})\n\nexport default connect(mapStateToProps,{deleteTask,getTaskById})(TaskItem);","import React,{Fragment,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport TaskItem from './TaskItem';\nimport {getTasks} from '../../actions/task';\n\nconst Tasks = ({getTasks, task:{tasks,loading}}) => {\n    useEffect(()=>{\n        getTasks();\n    },[getTasks]);\n    return ( loading ? <Spinner/>:(\n        <Fragment>\n            <h1 className=\"large text-primary\">Tasks</h1>\n            <Link className=\"btn btn-dark my-1\" to=\"/create-task\">Create Task</Link>\n            {tasks.length>0?(\n                    <Fragment>\n                        <div className=\"tasks\">\n                            {tasks.map(task=>(\n                                <TaskItem key={task._id} task={task}/>\n                            ))}\n                        </div>\n                    </Fragment>):(<h4>No Tasks created!!</h4>)\n            }    \n        </Fragment>)\n        \n    )\n}\n\nTasks.propTypes = {\n    getTasks:PropTypes.func.isRequired,\n    task:PropTypes.object.isRequired \n}\n\nconst mapStateToProps = state => ({\n    task:state.task\n});\n\nexport default connect(mapStateToProps,{getTasks})(Tasks);","import React, {useState,Fragment,useEffect} from 'react';\nimport moment from 'moment';\nimport {Link,withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { addDays } from 'date-fns';\nimport {updateTask,getTaskById} from '../../actions/task';\n\n\nconst EditTask = ({updateTask,getTaskById,Task:{task,loading},history,match}) =>{\n    console.log(task)\n    const [formData,setFormData] = useState({\n        description:'',\n        due_at:'',\n        toBeReminded:'',\n        completed:''\n    });\n    \n    \n    const onSubmit = e=>{\n        e.preventDefault();\n        updateTask(task._id,formData,history);\n    }\n    useEffect(()=>{\n        getTaskById(match.params.id);\n        // setFormData({\n        //     description: loading || !task.description?'':task.description\n        //     //due_at: loading || !task.due_at?'':task.due_at      \n        // }),loading,task.description\n    },[match.params.id,getTaskById])\n\n\n    const onChange = e=>setFormData({...formData, [e.target.name]:e.target.value})\n    const onChangeDate = (date) => {\n        setFormData({...formData, due_at: moment(date).format(\"MM-DD-YYYY\")})\n    }\n\n    const {description,due_at} = formData;\n    \n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                Edit Task\n            </h1>\n            <form className=\"form\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                <label htmlFor=\"descr\">Description:</label><br/>\n                <input type=\"text\" placeholder=\"Task Description\" name=\"description\" value={description} onChange={e=> onChange(e)}/>\n                <small className=\"form-text\">Task Description</small>\n                </div>    \n                <div className=\"form-group\">\n                    <label htmlFor=\"due_date\">Due Date for Task:</label><br></br>\n                    <DatePicker minDate={addDays(new Date(), 1)} id=\"due_date\" name=\"due_at\" value={due_at} onChange={(date)=> onChangeDate(date)} />\n                </div>\n                <div className=\"form-group\">\n                    <label>Set Reminder:</label><br></br>\n                    <input type=\"radio\" id=\"yesR\" name=\"toBeReminded\"  value=\"true\" onClick={e=> onChange(e)}/>\n                    <label htmlFor=\"yesR\">Yes</label><br/>\n                    <input type=\"radio\" id=\"noR\" name=\"toBeReminded\" value=\"false\" onClick={e=> onChange(e)}/>\n                    <label htmlFor=\"noR\">No</label><br/>  \n                </div>\n                <div className=\"form-group\">\n                    <label>Status:</label><br></br>\n                    <input type=\"radio\" id=\"yes\" name=\"completed\"  value=\"true\" onClick={e=> onChange(e)}/>\n                    <label htmlFor=\"yes\">Completed</label><br/>\n                    <input type=\"radio\" id=\"no\" name=\"completed\" value=\"false\" onClick={e=> onChange(e)}/>\n                    <label htmlFor=\"no\">Pending</label><br/>  \n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <Link className=\"btn btn-light my-1\" to=\"/tasks\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nEditTask.propTypes = {\n    updateTask:PropTypes.func.isRequired,\n    getTaskById:PropTypes.func.isRequired,\n    Task:PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    Task:state.task\n});\n\n\nexport default connect(mapStateToProps,{updateTask,getTaskById})(withRouter(EditTask));","import React, {Fragment,useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'; \nimport {addTask} from '../../actions/task';\nimport { addDays } from 'date-fns';\nimport moment from 'moment';\n\n\n\nconst TaskForm = ({addTask}) =>{\n    const [formData,setFormData] = useState({\n        description:'',\n        due_at:'',\n        toBeReminded:''\n    })\n    const onSubmit = e=>{\n        e.preventDefault();\n        addTask(formData);\n    }\n    const onChange = e=> setFormData({...formData, [e.target.name]:e.target.value})\n    const onChangeDate = (date) => {\n       setFormData({...formData, due_at: moment(date).format(\"MM-DD-YYYY\")})\n        //console.log('date : ',date )\n    }\n    const {description,due_at} = formData;\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n                New Task\n            </h1>\n            <form className=\"form my-1\" onSubmit={e=>onSubmit(e)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"descr\">Description:</label><br/>\n                    <input type=\"text\" id=\"descr\" placeholder=\"Task Description\" name=\"description\" value={description} onChange={e=> onChange(e)}/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"due_date\">Due Date for Task:</label><br></br>\n                    <DatePicker minDate={addDays(new Date(), 1)} id=\"due_date\" name=\"due_at\" value={due_at} onChange={(date)=> onChangeDate(date)} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"reminder\">Set Reminder:</label><br></br>\n                    <input type=\"radio\" id=\"yes\" name=\"toBeReminded\"  value=\"true\" onClick={e=> onChange(e)}/>\n                    <label htmlFor=\"yes\">Yes</label><br/>\n                    <input type=\"radio\" id=\"no\" name=\"toBeReminded\" value=\"false\" onClick={e=> onChange(e)}/>\n                    <label htmlFor=\"no\">No</label><br></br> \n                    \n                    \n                </div>\n                <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\n                <Link className=\"btn btn-light my-1\" to=\"/tasks\">Go Back</Link>\n            </form>\n        </Fragment>\n    )\n}\n\nTaskForm.propTypes = {\n    addTask:PropTypes.func.isRequired\n}\n\nexport default connect(null,{addTask})(TaskForm); \n/*\n<input type='date' name=\"due_at\" value={due_at} onChange={e=> onChange(e)}/>\n\n<DatePicker id=\"due_date\" minDate={addDays(new Date(), 1)} id=\"due_date\" name=\"due_at\" value={due_at} onChange={e=> onChange(e)} />\n*/","import React,{Fragment} from 'react';\n\nconst NotFound = ()=>{\n    return (\n        <Fragment>\n            <h1 className=\"x-large text-primary\">404 : Page Not Found</h1>\n        </Fragment>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport Login from '../auth/Login';\nimport Register from '../auth/Register';\nimport Dashboard from '../dashboard/Dashboard';\nimport Alert from '../layout/Alert'\nimport PrivateRoute from '../routing/PrivateRoute';\nimport CreateProfile from '../profile-forms/CreateProfile';\nimport EditProfile from '../profile-forms/EditProfile';\nimport Profiles from '../profile/profiles';\nimport Profile from '../profiles/profile';\nimport Tasks from '../Tasks/Tasks';\nimport EditTask from '../Tasks/TaskUpdateForm';\nimport TaskForm from '../Tasks/TaskForm';\nimport NotFound from '../layout/notFound';\n\nconst Routes = ()=>{\n    return (\n        <div>\n            <section className=\"container\">\n                <Alert />\n                <Switch>\n                <Route exact path=\"/register\" component={Register}/>\n                <Route exact path=\"/login\" component={Login}/>\n                <Route exact path=\"/profiles\" component={Profiles}/>\n                <Route exact path=\"/profile/:id\" component={Profile}/>\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                <PrivateRoute exact path=\"/create-profile\" component={CreateProfile}/>\n                <PrivateRoute exact path=\"/edit-profile\" component={EditProfile}/>\n                <PrivateRoute exact path=\"/tasks\" component={Tasks}/>\n                <PrivateRoute exact path=\"/edit-task/:id\" component={EditTask}/>\n                <PrivateRoute exact path=\"/create-task\" component={TaskForm}/>\n                <Route component={NotFound}/>\n                </Switch>\n            </section>\n\n        </div>\n    )\n}\n\nexport default Routes;\n\n\n","import {SET_ALERT,REMOVE_ALERT} from '../actions/types';\nconst initialState = [];\nexport default function(state = initialState, action){\n    const {type,payload} = action;\n    switch(type)\n    {\n        case SET_ALERT:\n            return [...state,payload];\n        case REMOVE_ALERT:\n            return state.filter(alert=>alert.id!==payload)\n        default:\n            return state;\n    }\n}","import {REGISTER_SUCCESS,REGISTER_FAILURE,USER_LOADED,AUTH_ERROR, LOGIN_SUCCESS,LOGIN_FAILURE,LOGOUT,DELETE_ACCOUNT} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated:null,\n    loading:true,\n    user:null\n}\n\nexport default function(state=initialState,action){\n    const {type,payload} = action;\n    switch(type){\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated:true,\n                loading:false,\n                user:payload\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token',payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated:true,\n                loading:false\n            }\n        case REGISTER_FAILURE:\n        case AUTH_ERROR:\n        case LOGIN_FAILURE:\n        case LOGOUT:\n        case DELETE_ACCOUNT:\n            localStorage.removeItem('token')\n            return {\n                ...state,\n                token:null,\n                isAuthenticated:false,\n                loading:false\n            };\n        \n        default:\n            return state;\n\n    }\n}","import {GET_PROFILE,GET_PROFILES,PROFILE_ERROR,CLEAR_PROFILE} from '../actions/types';\n\n\nconst initialState = {\n    profile:null,\n    profiles:[],\n    loading:true,\n    error:{}\n}\n\nexport default function(state=initialState,action){\n    const {type,payload} = action;\n\n    switch(type)\n    {\n        case GET_PROFILE:\n            return {\n                ...state,\n                profile:payload,\n                loading:false\n            };\n        case GET_PROFILES:\n            return {\n                ...state,\n                profiles:payload,\n                loading:false\n            }\n        case PROFILE_ERROR:\n            return {\n                ...state,\n                error:payload,\n                loading:false\n            };\n        case CLEAR_PROFILE:\n            return{\n                ...state,\n                profile:null,\n                loading:false\n            }\n        default:\n            return state;\n    }\n}","import {\n    GET_TASK,\n    GET_TASKS,\n    TASK_ERROR,\n    UPDATE_TASK,\n    DELETE_TASK,\n    ADD_TASK\n} from '../actions/types';\n\nconst initialState = {\n    task:null,\n    tasks:[],\n    loading:true,\n    error:{}\n\n}\n\nexport default function(state=initialState,action) {\n    const {type,payload} = action;\n    switch(type) {\n        case GET_TASKS:\n            return {\n                ...state,\n                tasks:payload,\n                loading:false\n            };\n        case ADD_TASK:\n            return {\n                ...state,\n                tasks:[...state.tasks,payload],\n                loading:false\n            }\n        case GET_TASK:\n            return {\n                ...state,\n                task:payload, \n                loading:false\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks:state.tasks.filter(task=>task._id!==payload),\n                loading:false\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks:state.tasks.map(task=>task._id===payload.id?{...task,description:payload.description}:task),\n                loading:false\n            }\n        case TASK_ERROR:\n            return {\n                ...state,\n                error:payload,\n                loading:false\n            };\n        default:\n            return state;\n    }\n} ","import {combineReducers} from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport task from './task';\n\nexport default combineReducers({\n    alert,\n    auth,\n    profile,\n    task\n});","import { createStore,applyMiddleware } from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React, {Fragment,useEffect} from 'react';\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n\n\n//Redux\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {loadUser} from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\n\nif(localStorage.token)\n{\n  setAuthToken(localStorage.token);\n}\n\n\nconst App = ()=>{\n\n  useEffect(()=>{\n    store.dispatch(loadUser())\n  },[]);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment> \n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing}/>\n            <Route component={Routes}/>\n          </Switch>      \n        </Fragment>\n      </Router>\n    </Provider>    \n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/spinner.0fba2a31.gif\";"],"sourceRoot":""}